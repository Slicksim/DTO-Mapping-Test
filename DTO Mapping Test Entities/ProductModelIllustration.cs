//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace DTO_Mapping_Test_Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Illustration))]
    [KnownType(typeof(ProductModel))]
    public partial class ProductModelIllustration
    {
        #region Primitive Properties
        [DataMember]
        public virtual int ProductModelID
        {
            get { return _productModelID; }
            set
            {
                if (_productModelID != value)
                {
                    if (ProductModel != null && ProductModel.ProductModelID != value)
                    {
                        ProductModel = null;
                    }
                    _productModelID = value;
                }
            }
        }
        private int _productModelID;
        [DataMember]
        public virtual int IllustrationID
        {
            get { return _illustrationID; }
            set
            {
                if (_illustrationID != value)
                {
                    if (Illustration != null && Illustration.IllustrationID != value)
                    {
                        Illustration = null;
                    }
                    _illustrationID = value;
                }
            }
        }
        private int _illustrationID;
        [DataMember]
        public virtual System.DateTime ModifiedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
        
    
        [DataMember]
        public virtual Illustration Illustration
        {
            get { return _illustration; }
            set
            {
                if (!ReferenceEquals(_illustration, value))
                {
                    var previousValue = _illustration;
                    _illustration = value;
                    FixupIllustration(previousValue);
                }
            }
        }
        private Illustration _illustration;
        
    
        [DataMember]
        public virtual ProductModel ProductModel
        {
            get { return _productModel; }
            set
            {
                if (!ReferenceEquals(_productModel, value))
                {
                    var previousValue = _productModel;
                    _productModel = value;
                    FixupProductModel(previousValue);
                }
            }
        }
        private ProductModel _productModel;

        #endregion
        #region Association Fixup
    
        private void FixupIllustration(Illustration previousValue)
        {
            if (previousValue != null && previousValue.ProductModelIllustrations.Contains(this))
            {
                previousValue.ProductModelIllustrations.Remove(this);
            }
    
            if (Illustration != null)
            {
                if (!Illustration.ProductModelIllustrations.Contains(this))
                {
                    Illustration.ProductModelIllustrations.Add(this);
                }
                if (IllustrationID != Illustration.IllustrationID)
                {
                    IllustrationID = Illustration.IllustrationID;
                }
            }
        }
    
        private void FixupProductModel(ProductModel previousValue)
        {
            if (previousValue != null && previousValue.ProductModelIllustrations.Contains(this))
            {
                previousValue.ProductModelIllustrations.Remove(this);
            }
    
            if (ProductModel != null)
            {
                if (!ProductModel.ProductModelIllustrations.Contains(this))
                {
                    ProductModel.ProductModelIllustrations.Add(this);
                }
                if (ProductModelID != ProductModel.ProductModelID)
                {
                    ProductModelID = ProductModel.ProductModelID;
                }
            }
        }

        #endregion
    }
}
