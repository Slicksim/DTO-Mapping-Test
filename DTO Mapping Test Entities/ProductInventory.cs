//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace DTO_Mapping_Test_Entities
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Location))]
    [KnownType(typeof(Product))]
    public partial class ProductInventory
    {
        #region Primitive Properties
        [DataMember]
        public virtual int ProductID
        {
            get { return _productID; }
            set
            {
                if (_productID != value)
                {
                    if (Product != null && Product.ProductID != value)
                    {
                        Product = null;
                    }
                    _productID = value;
                }
            }
        }
        private int _productID;
        [DataMember]
        public virtual short LocationID
        {
            get { return _locationID; }
            set
            {
                if (_locationID != value)
                {
                    if (Location != null && Location.LocationID != value)
                    {
                        Location = null;
                    }
                    _locationID = value;
                }
            }
        }
        private short _locationID;
        [DataMember]
        public virtual string Shelf
        {
            get;
            set;
        }
        [DataMember]
        public virtual byte Bin
        {
            get;
            set;
        }
        [DataMember]
        public virtual short Quantity
        {
            get;
            set;
        }
        [DataMember]
        public virtual System.Guid rowguid
        {
            get;
            set;
        }
        [DataMember]
        public virtual System.DateTime ModifiedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
        
    
        [DataMember]
        public virtual Location Location
        {
            get { return _location; }
            set
            {
                if (!ReferenceEquals(_location, value))
                {
                    var previousValue = _location;
                    _location = value;
                    FixupLocation(previousValue);
                }
            }
        }
        private Location _location;
        
    
        [DataMember]
        public virtual Product Product
        {
            get { return _product; }
            set
            {
                if (!ReferenceEquals(_product, value))
                {
                    var previousValue = _product;
                    _product = value;
                    FixupProduct(previousValue);
                }
            }
        }
        private Product _product;

        #endregion
        #region Association Fixup
    
        private void FixupLocation(Location previousValue)
        {
            if (previousValue != null && previousValue.ProductInventories.Contains(this))
            {
                previousValue.ProductInventories.Remove(this);
            }
    
            if (Location != null)
            {
                if (!Location.ProductInventories.Contains(this))
                {
                    Location.ProductInventories.Add(this);
                }
                if (LocationID != Location.LocationID)
                {
                    LocationID = Location.LocationID;
                }
            }
        }
    
        private void FixupProduct(Product previousValue)
        {
            if (previousValue != null && previousValue.ProductInventories.Contains(this))
            {
                previousValue.ProductInventories.Remove(this);
            }
    
            if (Product != null)
            {
                if (!Product.ProductInventories.Contains(this))
                {
                    Product.ProductInventories.Add(this);
                }
                if (ProductID != Product.ProductID)
                {
                    ProductID = Product.ProductID;
                }
            }
        }

        #endregion
    }
}
